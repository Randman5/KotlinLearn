/**
 * Последовательности
 * */

package ipr.chp1


/**
 * * Последовательность представляет набор значений или диапазон.
 * .. : оператор для создания последовательности применяется
 * downTo: можно построить последовательность в обратном порядке
 * step: позволяет задать шаг
 * until: позволяет не включать верхнюю границу
 *
 * in: позволяет определить есть ли элемент в коллекции. Если элемент найдет вернет true
 * !in позволяет определить нет ли элемент в коллекции. Если элемент не найден вернет true
 * */
fun main() {
    var range = 1..5 // последовательность [ 1, 2, 3, 4, 5]
    val range2 = 'a'..'d' // последовательность [ a, b, c, d]

    // последовательность от 5 до 1 включительно
    val range3 = 5 downTo 1 // последовательность [ 5, 4, 3, 2, 1]

    // последовательность от 10 до 1 включительно с шагом 2
    val range4 = 10 downTo 1 step 2 // последовательность [ 10, 8, 6, 4, 2]

    println(1 in range) // true так как число 1 есть в последовательности 1..5
    println(100 !in range) // true так как число 100 отсутствует в последовательности 1..5

}