/**
 * Операции с числами
 * */

package ipr.chp1

/**
 *   Арифметические операции
 * + (сложение): возвращает сумму двух чисел.
 * - (вычитание): возвращает разность двух чисел.
 * * (умножение): возвращает произведение двух чисел.
 * / (деление): возвращает частное двух чисел.
 * %: возвращает остаток от целочисленного деления двух чисел.
 * ++ (инкремент): увеличивает значение на единицу.
 * -- (декремент): уменьшает значение на единицу.
 *
 * +=: присваивание после сложения. Присваивает левому операнду сумму левого и правого операндов: A += B эквивалентно A = A + B
 * -=: присваивание после вычитания. Присваивает левому операнду разность левого и правого операндов: A -= B эквивалентно A = A - B
 * *=: присваивание после умножения. Присваивает левому операнду произведение левого и правого операндов: A *= B эквивалентно A = A * B
 * /=: присваивание после деления. Присваивает левому операнду частное левого и правого операндов: A /= B эквивалентно A = A / B
 * %=: присваивание после деления по модулю. Присваивает левому операнду остаток от целочисленного деления левого операнда на правый: A %= B эквивалентно A = A % B
 *
 * Поразрядные операции
 * shl: сдвиг битов числа со знаком влево
 * shr: сдвиг битов числа со знаком вправо
 * ushr: сдвиг битов беззнакового числа вправо
 * and: побитовая операция AND (логическое умножение или конъюнкция). Эта операция сравнивает соответствующие разряды двух чисел и возвращает единицу, если эти разряды обоих чисел равны 1. Иначе возвращает 0.
 * or: побитовая операция OR (логическое сложение или дизъюнкция). Эта операция сравнивают два соответствуюших разряда обоих чисел и возвращает 1, если хотя бы один разряд равен 1. Если оба разряда равны 0, то возвращается 0.
 * xor: побитовая операция XOR. Сравнивает два разряда и возвращает 1, если один из разрядов равен 1, а другой равен 0. Если оба разряда равны, то возвращается 0.
 * inv: логическое отрицание или инверсия - инвертирует биты числа
 *
 * */
fun main() {

    // Арифметические операции
    println("Арифметические операции")
    // + (сложение): возвращает сумму двух чисел.
    println("// + (сложение): возвращает сумму двух чисел.")
    println(1 + 1) // = 2
    // - (вычитание): возвращает разность двух чисел.
    println("// - (вычитание): возвращает разность двух чисел.")
    println(1 - 1) // = 0
    // * (умножение): возвращает произведение двух чисел.
    println("// * (умножение): возвращает произведение двух чисел.")
    println(2 * 2) // = 4
    // / (деление): возвращает частное двух чисел.
    println("// / (деление): возвращает частное двух чисел.")
    println(25 / 5) // = 5
    // %: возвращает остаток от целочисленного деления двух чисел.
    println("// %: возвращает остаток от целочисленного деления двух чисел.")
    println(24 % 5) // = 4
    // ++ (инкремент): увеличивает значение на единицу.
    println("// ++ (инкремент): увеличивает значение на единицу.")
    var inc: Int = 5
    println(inc++) // = 5 //сначала число будет выведено на консоль, а потом увеличится на 1, то есть будет равно 6
    println(++inc) // = 7 //сначала число увеличится на 1, то есть будет равно 7, а потом число будет выведено в консоль
    // -- (декремент): уменьшает значение на единицу.
    println("// -- (декремент): уменьшает значение на единицу.")
    var dec: Int = 5
    println(dec--) // = 5 //сначала число будет выведено на консоль, а потом уменьшиться на 1, то есть будет равно 4
    println(--dec) // = 7 //сначала число уменьшиться на 1, то есть будет равно 3, а потом число будет выведено в консоль

    // Операции с присвоением
    var result: Int = 0
    val value: Int = 5

    // +=: присваивание после сложения. Присваивает левому операнду сумму левого и правого операндов: A += B эквивалентно A = A + B
    println("// +=: присваивание после сложения. Присваивает левому операнду сумму левого и правого операндов: A += B эквивалентно A = A + B")
    result += value // result = 5
    println(result) // 5
    // -=: присваивание после вычитания. Присваивает левому операнду разность левого и правого операндов: A -= B эквивалентно A = A - B
    println("// -=: присваивание после вычитания. Присваивает левому операнду разность левого и правого операндов: A -= B эквивалентно A = A - B")
    result = 0
    result -= value // result = -5
    println(result) // -5
    // *=: присваивание после умножения. Присваивает левому операнду произведение левого и правого операндов: A *= B эквивалентно A = A * B
    println("// *=: присваивание после умножения. Присваивает левому операнду произведение левого и правого операндов: A *= B эквивалентно A = A * B")
    result = 2
    result *= value // result = 2 * 5 = 10
    println(result) // 10
    // /=: присваивание после деления. Присваивает левому операнду частное левого и правого операндов: A /= B эквивалентно A = A / B
    println("// /=: присваивание после деления. Присваивает левому операнду частное левого и правого операндов: A /= B эквивалентно A = A / B")
    result = 10
    result /= value // result = 10 / 5 = 2
    println(result) // 2
    // %=: присваивание после деления по модулю. Присваивает левому операнду остаток от целочисленного деления левого операнда на правый: A %= B эквивалентно A = A % B
    println("// %=: присваивание после деления по модулю. Присваивает левому операнду остаток от целочисленного деления левого операнда на правый: A %= B эквивалентно A = A % B")
    result = 12
    result %= value // result = 12 / 5 = 2
    println(result) // 2


    //Поразрядные операции
    // TODO не разбирал вернуться


}